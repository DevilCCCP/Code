#include "Translit.h"


const char* gRuCodeMap[0x100] = {
  "?", "YO", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",        // 0x00
  "A", "B", "V", "G", "D", "E", "J", "Z", "I", "Y", "K", "L", "M", "N", "O", "P",         // 0x10
  "R", "S", "T", "U", "F", "H", "C", "CH", "SH", "SCH", "'", "YI", "", "YE", "YU", "YA",  // 0x20
  "a", "b", "v", "g", "d", "e", "j", "z", "i", "y", "k", "l", "m", "n", "o", "p",         // 0x30
  "r", "s", "t", "u", "f", "h", "c", "ch", "sh", "sch", "'", "yi", "", "ye", "yu", "ya",  // 0x40
  "?", "yo", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",        // 0x50
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0x60
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0x70
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0x80
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0x90
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0xa0
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0xb0
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0xc0
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0xd0
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?",         // 0xe0
  "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?"          // 0xf0
};

QString TranslitToAscii(const QString& text)
{
  QString result;
  for (auto itr = text.begin(); itr != text.end(); itr++) {
    QChar ch = *itr;
    ushort unic = ch.unicode();
    ushort lang = (ushort)(unic >> 8);
    ushort code = (ushort)(unic & 0xff);
    switch (lang) {
    case 0: result.append(ch); break;
    case 4: result.append(gRuCodeMap[code]); break;
    default: result.append('?'); break;
    }
  }
  return result;
}
